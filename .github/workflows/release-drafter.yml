name: Create a release

on:
  push:
    tags:
      - '*'

env:
  DOCKER_USERNAME: santhin
  REPO: santhin/cicd-playground

jobs:
  release:
    permissions:
      contents: write  # for release-drafter/release-drafter to create a github release
      pull-requests: write  # for release-drafter/release-drafter to add label to PR
    runs-on: ubuntu-latest
    steps:
      - name: version
        id: version
        run: |
          tag=${GITHUB_REF/refs\/tags\//}
          version=${tag#v}
          major=${version%%.*}
          echo "::set-output name=tag::${tag}"
          echo "::set-output name=version::${version}"
          echo "::set-output name=major::${major}"
          echo "${tag}"
          echo "${version}"
          echo "${major}"
          
      - uses: release-drafter/release-drafter@v5
        with:
          version: ${{ steps.version.outputs.version }}
          publish: true
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # docker:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     -
  #       name: Cache Docker layers
  #       uses: actions/cache@v3
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: Set environment variables
  #       run: |
  #         cat >> $GITHUB_ENV << EOF
  #         VERSION=${GITHUB_REF##*/}
  #         EOF
          
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ env.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         tags: ${{ env.REPO }}:latest,${{ env.REPO }}:${{ env.VERSION }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          
  #     - name: Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache